@using System.Globalization
@using Microsoft.AspNetCore.Localization
@inject NavigationManager Navigation
@inject IConfiguration _configuration;

<RadzenDropDown @bind-Value=@Culture Data=@supportedCultures Style="width: 4.5rem;" />

@code
{
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }
    private CultureInfo[] supportedCultures = new[]
    {
        new CultureInfo("hr-HR"),
        new CultureInfo("en-US")        
    };

    protected override void OnInitialized()
    {
        HttpContext?.Response.Cookies.Append(
            CookieRequestCultureProvider.DefaultCookieName,
            CookieRequestCultureProvider.MakeCookieValue(new RequestCulture(CultureInfo.CurrentCulture, CultureInfo.CurrentUICulture)), 
            new CookieOptions { Secure = true, HttpOnly = true, SameSite = SameSiteMode.None });

        Culture = CultureInfo.CurrentCulture;

        try
        {
            var supportedCulturesList = _configuration.GetSection("SupportedCultures").Get<string[]>();
            supportedCultures = new CultureInfo[supportedCulturesList?.Length ?? 0];

            for (int i = 0; i < supportedCulturesList?.Length; i++)
                supportedCultures[i] = new CultureInfo(supportedCulturesList[i]);
        }
        catch (Exception)
        {            
           
        }
    }

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (CultureInfo.CurrentCulture != value)
            {
                var uri = new Uri(Navigation.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                var cultureEscaped = Uri.EscapeDataString(value.Name);
                var uriEscaped = Uri.EscapeDataString(uri);

                Navigation.NavigateTo($"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}", forceLoad: true);
            }
        }
    }
}